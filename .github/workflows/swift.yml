# This workflow will build a Swift project
 # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

 name: Swift
 env:
   destination: 'platform=iOS Simulator,name=iPhone 16,OS=18.2'
   SDK: '$(sudo xcode-select -p)/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk'
   TARGET: 'aarch64-apple-ios'
   TOOLCHAIN_PATH: '$(sudo xcode-select -p)/Contents/Developer/Toolchains/swift-latest.xctoolchain/usr/bin'
 on:
   push:
     branches: [ "main" ]
   pull_request:
     branches: [ "main" ]

 jobs:
   build:

     runs-on: macos-latest

     steps:
     - uses: actions/checkout@v2

     - name: List Xcode installations
       run: sudo ls -1 /Applications | grep "Xcode"

     - name: Select Xcode 16.2
       run: sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer

     - name: Get swift version
       run: swift --version

     - name: Resolve Package Dependencies
       run: swift package resolve

     - name: Generate Xcode Project
       run: swift package generate-xcodeproj

     - name: Find the workspace
       id: find_workspace
       run: |
          # Locate the package.xcworkspace in the project directory
          WORKSPACE_PATH=$(find "$(pwd)" -name "package.xcworkspace" -type d)

          if [ -z "$WORKSPACE_PATH" ]; then
            echo "Error: Workspace not found!"
            exit 1
          fi

          echo "Workspace found at: $WORKSPACE_PATH"
          echo "workspace_path=$WORKSPACE_PATH" >> $GITHUB_ENV

     - name: Run tests
       run: |
          xcodebuild test \
            -workspace "${{ env.workspace_path }}" \
            -scheme SnappTheming-Package \
            -destination "${{ env.destination }}"


     - name: Build
       run: swift build --sdk ${{env.SDK}} --triple ${{env.TARGET}} --scratch-path "./.build/${{env.TARGET}}" "$@" | xcpretty

#     - name: Test
#       run: xcodebuild test -workspace .swiftpm/xcode/package.xcworkspace -scheme SnappTheming-Package -destination ${{env.destination}}
