//
//  EitherShape.swift
//  SnappTheming
//
//  Created by Ilian Konchev on 14.01.25.
//

import SwiftUI

/// A type that conditionally represents one of two shapes.
///
/// `EitherShape` allows switching between two different `Shape` types dynamically,
/// maintaining a single shape type signature. This can be useful for cases where
/// a shape needs to change based on external conditions.
///
/// - Parameters:
///   - First: The first shape type conforming to `Shape`.
///   - Second: The second shape type conforming to `Shape`.
public enum EitherShape<First: Shape, Second: Shape>: Shape {
    /// The first shape option.
    case first(First)

    /// The second shape option.
    case second(Second)

    /// Generates a path for the selected shape.
    ///
    /// - Parameter rect: The bounding rectangle within which the shape should be drawn.
    /// - Returns: The `Path` generated by the currently active shape.
    public func path(in rect: CGRect) -> Path {
        switch self {
        case .first(let first):
            return first.path(in: rect)
        case .second(let second):
            return second.path(in: rect)
        }
    }
}
