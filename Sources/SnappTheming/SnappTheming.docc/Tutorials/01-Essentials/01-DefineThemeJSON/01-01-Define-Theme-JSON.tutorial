@Tutorial(time: 20) {
    @Intro(title: "Your first theme") {
        Learn how to build a valid theme JSON, which types are supported and how to define them
    }

    @Section(title: "Create a light theme") {
        @ContentAndMedia {
            Theme declartion is a JSON that holds properties for various foundation types. You can read more about supported types in [JSON Schema](https://ios-theming.snappmobile.io/documentation/snapptheming/jsonschema) article. 
        }

        @Steps {
            @Step {
                Create a new Swift file named LightTheme.swift and import the SnappTheming.

                > Note: Before importing the library you will need to depend on it by [adding it to your 
                        Xcode project settings or SPM package](https://github.com/Snapp-Mobile/SnappTheming).
                @Code(name: "LightTheme.swift", file: 01-01-01-code-001.swift)
            }

            @Step {
                Create a private [multiline string literal](https://docs.swift.org/swift-book/documentation/the-swift-programming-language/stringsandcharacters/#Multiline-String-Literals) named `json` that represents an empty JSON object.
                @Code(name: "LightTheme.swift", file: 01-01-01-code-002.swift)
            }

            @Step {
                Create an extension on [SnappThemingDeclaration](https://ios-theming.snappmobile.io/documentation/snapptheming/snappthemingdeclaration) that includes a static property named `light`, and parse a theme declaration using the [SnappThemingParser](https://ios-theming.snappmobile.io/documentation/snapptheming/snappthemingparser).[parse(from:using:)](https://ios-theming.snappmobile.io/documentation/snapptheming/snappthemingparser/parse(from:using:)).

                > Tip: You can customize parsing by providing a [configuration](https://ios-theming.snappmobile.io/documentation/snapptheming/snappthemingparserconfiguration).
                @Code(name: "LightTheme.swift", file: 01-01-01-code-003.swift)
            }

            @Step {
                Now, let's define a few colors that we want to use in our app. List them as child properties of the root-level `colors` property.
                
                > Tip: 
                > The framework supports HEX-encoded RGB, RGBA, and ARGB notations. You can read more about color declarations in the [documentation](https://ios-theming.snappmobile.io/documentation/snapptheming/snappthemingcolordeclarations).
                
                @Code(name: "LightTheme.swift", file: 01-01-01-code-004.swift)
            }

            @Step {
                It is time to add more styling to our app. Let's define the custom fonts we want to use in our example. We will use the elegant [Doto](https://fonts.google.com/specimen/Doto) font from Google's Fonts library.

                > Note: In order to use fonts in your theme JSON declaration, you need to encode them as `Base64` before using them.  
                > Read more about how to prepare a valid font declaration in the [documentation](https://ios-theming.snappmobile.io/documentation/snapptheming/snappthemingfontdeclarations).

                @Code(name: "LightTheme.swift", file: 01-01-01-code-005.swift)
            }
           
           @Step {
               Since we have fonts in our theme, we will now add [typography declarations](https://ios-theming.snappmobile.io/documentation/snapptheming/snappthemingtypographydeclarations) based on them. Let's add a `typography` property to our JSON root and include the typographies we want to use.

               @Code(name: "LightTheme.swift", file: 01-01-01-code-006.swift)
           }

           @Step {
               In order to inform the system about our custom fonts, we need to register them. Let's update the theme initialization and configure the font registration.

               > Note: In addition to registration, you may also need to deregister fonts if you no longer wish to use them (e.g., when switching between different themes). Learn more about the font registration process in the [documentation](https://ios-theming.snappmobile.io/documentation/snapptheming/snappthemingfontdeclarations).

               @Code(name: "LightTheme.swift", file: 01-01-01-code-007.swift)
           }
        }
    }

    @Section(title: "Integrating with SwiftUI") {
        @ContentAndMedia {
            Now that we have a simple theme built and parsed, we need to determine how to power a SwiftUI view with that theme.
        }

        @Steps {
            @Step {
                Let's create a SwiftUI view called `ThemeDeclarationView` and import `SwiftUI` and `SnappTheming`. We will use this view to build a simple layout and style it with our `light` theme.

                @Code(name: "ThemeDeclarationView.swift", file: 01-01-02-code-001.swift)
            }
        }
    }

}
